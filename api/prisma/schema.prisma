// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS

enum MissionStatus {
  Planifiee
  En_cours
  Terminee
  Annulee
}

enum DonationType {
  Ponctuel
  Mensuel
}

enum DonationMethod {
  Mobile_Money
  Carte_Bancaire
}

enum DonationStatus {
  Confirme
  En_attente
  Echoue
}

enum EventStatus {
  A_venir
  Termine
  Annule
}

enum VolunteerStatus {
  En_attente
  Actif
  Inactif
  Rejete
}

enum Sex {
  masculin
  feminin
}

enum MaritalStatus {
  celibataire
  marie
  divorce
  veuf
}

enum ArchiveItemType {
  folder
  document
  spreadsheet
  image
  video
  audio
  pdf
  archive
  text
  unknown
}

// MODELS

model User {
  id                String         @id @default(cuid())
  firstName         String
  lastName          String
  email             String         @unique
  phone             String?
  password          String
  role              UserRole       @default(USER)
  
  // Volunteer Profile Fields
  matricule         String?        @unique
  nationality       Nationality?   @relation(fields: [nationalityId], references: [id])
  nationalityId     String?
  birthDate         DateTime?
  birthPlace        String?
  sex               Sex?
  maritalStatus     MaritalStatus?
  idType            String?
  idNumber          String?
  address           String?
  educationLevel    EducationLevel? @relation(fields: [educationLevelId], references: [id])
  educationLevelId  String?
  profession        Profession?    @relation(fields: [professionId], references: [id])
  professionId      String?
  skills            Skill[]        @relation("UserSkills")
  volunteerExperience String?
  availability      String[]
  causes            String[]
  assignedCell      String?
  residenceProvince String?
  residenceDepartement String?
  residenceCommuneCanton String?
  residenceArrondissement String?
  residenceQuartierVillage String?
  photo             String?
  idCardFront       String?
  idCardBack        String?
  termsAccepted     Boolean?       @default(false)
  status            VolunteerStatus? @default(En_attente)
  
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  missions          Mission[]      @relation("MissionParticipants")
}

enum UserRole {
  USER
  ADMIN
  SUPERADMIN
}

model Skill {
  id          String      @id @default(cuid())
  name        String      @unique
  volunteers  User[]      @relation("UserSkills")
}


model Profession {
  id          String      @id @default(cuid())
  name        String      @unique
  volunteers  User[]
}

model EducationLevel {
  id          String      @id @default(cuid())
  name        String      @unique
  volunteers  User[]
}

model Nationality {
  id          String      @id @default(cuid())
  name        String      @unique
  volunteers  User[]
}

model Province {
  id          String      @id @default(cuid())
  name        String      @unique
}


model Departement {
  id          String      @id @default(cuid())
  name        String      @unique
}

model CommuneCanton {
  id          String      @id @default(cuid())
  name        String      @unique
}

model Arrondissement {
  id          String      @id @default(cuid())
  name        String      @unique
}

model QuartierVillage {
  id          String      @id @default(cuid())
  name        String      @unique
}

model Mission {
  id              String        @id @default(cuid())
  title           String
  description     String
  location        String
  startDate       DateTime
  endDate         DateTime
  status          MissionStatus @default(Planifiee)
  requiredSkills  String[]
  maxParticipants Int?
  participants    User[]   @relation("MissionParticipants")
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model BlogPost {
  id        String   @id @default(cuid())
  title     String
  date      DateTime
  excerpt   String
  image     String?
  imageHint String?
  slug      String   @unique
  visible   Boolean  @default(false)
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id        String   @id @default(cuid())
  title     String
  date      DateTime
  fileUrl   String
  visible   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id          String      @id @default(cuid())
  title       String
  date        DateTime
  location    String
  description String
  image       String?
  imageHint   String?
  status      EventStatus @default(A_venir)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Donation {
  id        String         @id @default(cuid())
  name      String
  email     String
  amount    Float
  type      DonationType
  method    DonationMethod
  date      DateTime
  status    DonationStatus @default(En_attente)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model ArchiveItem {
  id        String          @id @default(cuid())
  name      String
  type      ArchiveItemType
  parentId  String?
  parent    ArchiveItem?    @relation("FolderChildren", fields: [parentId], references: [id])
  children  ArchiveItem[]   @relation("FolderChildren")
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}